class DriverCode {

	public static void main(String[] args) {

		LinkedList<Integer> linkedList = new LinkedList<>();

		linkedList.insertBegin(23);
		linkedList.insertBegin(12);
		linkedList.insertBegin(56);
		linkedList.insertBegin(89);

		linkedList.traverse();

		linkedList.insertEnd(89);
		linkedList.insertEnd(45);
		linkedList.insertEnd(32);

		linkedList.traverse();

		linkedList.insertAt(33, 6);
		linkedList.insertAt(1, 0);
		linkedList.insertAt(99, 3);

		linkedList.traverse();
		linkedList.reverseTraverse();

		linkedList.deleteBegin();
		linkedList.deleteBegin();

		linkedList.traverse();

		linkedList.deleteAt(4);
		linkedList.deleteAt(3);

		linkedList.traverse();

		linkedList.deleteEnd();
		linkedList.deleteEnd();

		linkedList.traverse();

	}
}


class DriverCode {

	public static void main(String[] args) {

		int[] a = {10, 8, 7, 9, 12, 11, 13};

		BinarySearchTree<Integer> bst = new BinarySearchTree<>();

		for (Integer i : a) bst.insert(i);
		bst.traverse();

		bst.delete(11);
		bst.traverse();

		bst.delete(12);
		bst.traverse();

		bst.delete(8);
		bst.traverse();
	}
}

		
class DriverCode {

	public static void main(String[] args) {

		int[] a = {10, 8, 7, 9, 12, 11, 13};

		AVLTree<Integer> avl = new AVLTree<>();

		for (Integer i : a) avl.insert(i);
		avl.traverse();

		avl.delete(11);
		avl.traverse();

		avl.delete(12);
		avl.traverse();

		avl.delete(8);
		avl.traverse();
	}
}


class DriverCode {

	public static void main(String[] args) {

		Stack<Integer> stk = new Stack<>();

		stk.push(12);
		stk.push(24);
		stk.push(34);
		stk.push(56);

		System.out.println(stk.peek());

		stk.pop();
		stk.pop();

		System.out.println(stk.peek());

		stk.push(89);

		System.out.println(stk.peek());

		System.out.println(stk.isEmpty());

		stk.pop();
		stk.pop();

		System.out.println(stk.isEmpty());

		stk.pop();
		System.out.println(stk.isEmpty());
	}
}


class DriverCode {

	public static void main(String[] args) {

		StackUsingQueue<Integer> stk = new StackUsingQueue<>();

		stk.push(12);
		stk.push(24);
		stk.push(34);
		stk.push(56);

		System.out.println(stk.peek());

		stk.pop();
		stk.pop();

		System.out.println(stk.peek());

		stk.push(89);

		System.out.println(stk.peek());

		System.out.println(stk.isEmpty());

		stk.pop();
		stk.pop();

		System.out.println(stk.isEmpty());

		stk.pop();
		System.out.println(stk.isEmpty());
	}
}



class DriverCode {

	public static void main(String[] args) {

		int[] key = {2, 3, 4, 3, 2, 4, 1, 5, 1, 4, 6};
		int[] val = {12, 23, 34, 45, 56, 67, 78, 89, 43, 21, 34};
		int size = 3;

		LRUCache<Integer, Integer> lru = new LRUCache<>(size);

		for (int i = 0; i < key.length; i++) {

			lru.add(key[i], val[i]);
			lru.display();
		}
	}
}


class DriverCode {

	public static void main(String[] args) {

		MinStack<Integer> stk = new MinStack<>();

		stk.push(89);
		stk.push(24);
		stk.push(12);
		stk.push(38);

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		stk.pop();
		stk.pop();

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		stk.push(3);

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		System.out.println(stk.isEmpty());

		stk.pop();
		stk.pop();

		System.out.println(stk.isEmpty());

		stk.pop();
		System.out.println(stk.isEmpty());
	}
}


class DriverCode {

	public static void main(String[] args) {

		MinStackInteger stk = new MinStackInteger();

		stk.push(89);
		stk.push(24);
		stk.push(12);
		stk.push(38);

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		stk.pop();
		stk.pop();

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		stk.push(3);

		System.out.println(stk.peek());
		System.out.println(stk.getMin());

		System.out.println(stk.isEmpty());

		stk.pop();
		stk.pop();

		System.out.println(stk.isEmpty());

		stk.pop();
		System.out.println(stk.isEmpty());
	}
}


class DriverCode {

	public static void main(String[] args) {


		String[] str = {"abc", "ab", "defg", "abcabcd", "de", "a", "abcdefgh", "dddd"};

		Trie trie = new Trie();

		for (String s : str) trie.insert(s);

		System.out.println(trie.search("abcd"));
		System.out.println(trie.search("abc"));
		System.out.println(trie.search("defg"));
		System.out.println(trie.search("abcd"));

		System.out.println(trie.prefix("ab"));
		System.out.println(trie.prefix("abc"));
		System.out.println(trie.prefix("z"));
		System.out.println(trie.prefix("d"));


		for (String s : trie.suggest("de")) System.out.print(s + ", ");
		System.out.println();

		for (String s : trie.suggest("ab")) System.out.print(s + ", ");
		System.out.println();
	}
}


class DriverCode {

	public static void main(String[] args) {


		int[] a = {45, 23, 34, 89, 56, 67, 78, 12, 90};

		Heap<Integer> minHeap = new Heap<>(true);

		for (int i : a) minHeap.add(i);

		while (!minHeap.isEmpty()) System.out.println(minHeap.remove());
	}
}