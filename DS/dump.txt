class DriverCode {

	public static void main(String[] args) {

		LinkedList<Integer> linkedList = new LinkedList<>();

		linkedList.insertBegin(23);
		linkedList.insertBegin(12);
		linkedList.insertBegin(56);
		linkedList.insertBegin(89);

		linkedList.traverse();

		linkedList.insertEnd(89);
		linkedList.insertEnd(45);
		linkedList.insertEnd(32);

		linkedList.traverse();

		linkedList.insertAt(33, 6);
		linkedList.insertAt(1, 0);
		linkedList.insertAt(99, 3);

		linkedList.traverse();
		linkedList.reverseTraverse();

		linkedList.deleteBegin();
		linkedList.deleteBegin();

		linkedList.traverse();

		linkedList.deleteAt(4);
		linkedList.deleteAt(3);

		linkedList.traverse();

		linkedList.deleteEnd();
		linkedList.deleteEnd();

		linkedList.traverse();

	}
}


class DriverCode {

	public static void main(String[] args) {

		int[] a = {10, 8, 7, 9, 12, 11, 13};

		BinarySearchTree<Integer> bst = new BinarySearchTree<>();

		for (Integer i : a) bst.insert(i);
		bst.traverse();

		bst.delete(11);
		bst.traverse();

		bst.delete(12);
		bst.traverse();

		bst.delete(8);
		bst.traverse();
	}
}

		
class DriverCode {

	public static void main(String[] args) {

		int[] a = {10, 8, 7, 9, 12, 11, 13};

		AVLTree<Integer> avl = new AVLTree<>();

		for (Integer i : a) avl.insert(i);
		avl.traverse();

		avl.delete(11);
		avl.traverse();

		avl.delete(12);
		avl.traverse();

		avl.delete(8);
		avl.traverse();
	}
}


class DriverCode {

	public static void main(String[] args) {

		Stack<Integer> stk = new Stack<>();

		stk.push(12);
		stk.push(24);
		stk.push(34);
		stk.push(56);

		System.out.println(stk.peek());

		stk.pop();
		stk.pop();

		System.out.println(stk.peek());

		stk.push(89);

		System.out.println(stk.peek());

		System.out.println(stk.isEmpty());

		stk.pop();
		stk.pop();

		System.out.println(stk.isEmpty());

		stk.pop();
		System.out.println(stk.isEmpty());
	}
}

